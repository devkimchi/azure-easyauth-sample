@using System.Text.Json
@inject HttpClient Http

<h2>Auth Details</h2>

@if (string.IsNullOrWhiteSpace(headers) == false)
{
    <h3>Headers</h3>
    <pre>@headers</pre>
}

@if (string.IsNullOrWhiteSpace(queries) == false)
{
    <h3>Queries</h3>
    <pre>@queries</pre>
}

@if (string.IsNullOrWhiteSpace(body) == false)
{
    <h3>Body</h3>
    <pre>@body</pre>
}

@if (string.IsNullOrWhiteSpace(authMe) == false)
{
    <h3><code>/.auth/me</code></h3>
    <pre>@authMe</pre>
}

@code
{
    private string? headers;
    private string? queries;
    private string? body;
    private string? authMe;

    [CascadingParameter]
    public HttpContext? HttpContext { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.headers = JsonSerializer.Serialize(this.HttpContext!.Request.Headers);
        this.queries = JsonSerializer.Serialize(this.HttpContext!.Request.Query);
        using (var reader = new StreamReader(this.HttpContext!.Request.Body))
        {
            this.body = await reader.ReadToEndAsync();
        }
        this.authMe = await this.Http.GetStringAsync("/.auth/me");
    }
}